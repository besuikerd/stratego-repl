group 'com.besuikerd'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

mainClassName='com.besuikerd.stratego.repl.Main'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()

  flatDir {
    dirs 'libs'
  }
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.11'

  compile 'ch.qos.logback:logback-classic:1.1.7'
  compile 'org.slf4j:jcl-over-slf4j:1.7.21'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.8.2'
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.2'
  compile 'com.github.spullara.mustache.java:compiler:0.9.3'
  compile 'org.springframework.shell:spring-shell:1.2.0.RELEASE'
  compile name: 'strategoxt'
}

idea {
  module {
    iml {
      withXml {
        // Get root of module as groovy.util.Node.
        def moduleRoot = it.asNode()

        // Find if component with name 'FacetManager'
        // is already set.
        def facetManager = moduleRoot.component.find { component -> component.'@name' == 'FacetManager'}
        if (!facetManager) {
          // Create new component with name 'FacetManager'
          facetManager = moduleRoot.appendNode('component', [name: 'FacetManager'])
        }

        // Find Spring facet it might already be there.
        def springFacet = facetManager.facet.find { facet -> facet.'@type' == 'Spring' && facet.'@name' == 'Spring' }
        if (!springFacet) {
          // If not set create new facet node with name 'Spring'
          // and type 'Spring' and apply a default configuration.
          springFacet = facetManager.appendNode('facet', [type: 'Spring', name: 'Spring'])
          springFacet.appendNode('configuration')
        }
      }
    }
  }
}